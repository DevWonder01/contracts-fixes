/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DataStore } from "../DataStore";

export class DataStore__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DataStore> {
    return super.deploy(overrides || {}) as Promise<DataStore>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DataStore {
    return super.attach(address) as DataStore;
  }
  connect(signer: Signer): DataStore__factory {
    return super.connect(signer) as DataStore__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataStore {
    return new Contract(address, _abi, signerOrProvider) as DataStore;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevGov",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextGov",
        type: "address",
      },
    ],
    name: "SetGov",
    type: "event",
  },
  {
    inputs: [],
    name: "BPS_DIVIDER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "addressValues",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "boolValues",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "dataValues",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getInt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "intValues",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
      {
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "setAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "setData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "setInt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "setString",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "setUint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "stringValues",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "uintValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100645760008054336001600160a01b0319821681179092556001600160a01b0316825260208201527f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f78590604090a16040516110c1908161006a8239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806312d43a51146101df5780631870ad14146101d657806322538dae146101cd5780632f8e11ca146101c457806344a242b1146101bb578063498bff00146101b25780635b6beeb9146101a95780635cf74095146101a05780636e1a133614610197578063743df3251461018e5780637721dcbb146101855780637c4283bc1461017c5780639535ce12146101735780639c981fcb1461016a5780639d8e217714610161578063ae55c88814610158578063b8b2bdad1461014f578063bf40fac114610146578063cfad57a21461013d578063d38eebc714610134578063dcc2bc6e1461012b578063f15caeac146101225763fda69fae1461011a57600080fd5b61000e610e4d565b5061000e610e02565b5061000e610c64565b5061000e610c19565b5061000e610b5b565b5061000e610b1b565b5061000e610a4e565b5061000e610a24565b5061000e6109e2565b5061000e6109ac565b5061000e6108fe565b5061000e6108c2565b5061000e610830565b5061000e6107e5565b5061000e61060d565b5061000e6105c2565b5061000e6105a6565b5061000e610577565b5061000e6104db565b5061000e610451565b5061000e6103f0565b5061000e610351565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a357604052565b6102ab610232565b604052565b81601f8201121561000e5780359067ffffffffffffffff8211610326575b6040519261030460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610262565b8284526020838301011161000e57816000926020809301838601378301015290565b61032e610232565b6102ce565b60443590811515820361000e57565b60243590811515820361000e57565b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576103a19036906004016102b0565b6024359073ffffffffffffffffffffffffffffffffffffffff808316830361000e576020926103e6926103e16103d5610333565b93600054163314610ea7565b610f9c565b6040519015158152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576004356000526003602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576103e66104a660209236906004016102b0565b6104ae610333565b906104d273ffffffffffffffffffffffffffffffffffffffff600054163314610ea7565b60243590610f54565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576004356000526005602052602060ff604060002054166040519015158152f35b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261000e576004359067ffffffffffffffff821161000e57610574916004016102b0565b90565b503461000e5761058e6105893661052b565b610e77565b60005260016020526020604060002054604051908152f35b503461000e5760206105ba6105893661052b565b604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043560005260046020526020604060002054604051908152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e5761065e9036906004016102b0565b9060243581811161000e576106779036906004016102b0565b906106a060009361058973ffffffffffffffffffffffffffffffffffffffff8654163314610ea7565b835260209260068452604081209280519283116107d8575b6106cc836106c68654610cee565b86611037565b8491601f8411600114610730578394955092610725575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790555b60405160018152602090f35b0390f35b0151905038806106e3565b91907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084169561076586600052602060002090565b93905b8782106107c0575050836001959610610789575b505050811b019055610715565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c1916905538808061077c565b80600185968294968601518155019501930190610768565b6107e0610232565b6106b8565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043560005260026020526020604060002054604051908152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576108836108a69136906004016102b0565b61058973ffffffffffffffffffffffffffffffffffffffff600054163314610ea7565b6000526004602052602435604060002055602060405160018152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206040516127108152f35b503461000e576109106105893661052b565b6000526005602052602060ff604060002054166040519015158152f35b918091926000905b82821061094d575011610946575050565b6000910152565b91508060209183015181860152018291610935565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526109a5815180928160208801526020888801910161092d565b0116010190565b503461000e576109be6105893661052b565b60005260066020526107216109d66040600020610d41565b60405191829182610962565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020604051670de0b6b3a76400008152f35b503461000e57610a366105893661052b565b60005260046020526020604060002054604051908152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610a9e9036906004016102b0565b610acd610aa9610342565b9161058973ffffffffffffffffffffffffffffffffffffffff600054163314610ea7565b600052600560205260406000209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911515161790556040518061072181906001602083019252565b503461000e57610b2d6105893661052b565b6000526003602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043573ffffffffffffffffffffffffffffffffffffffff9081811680910361000e577f53351836099c03ffc3b1727d8abd4b0222afa87d4ed76ae3102d51369ef7f78591816040927fffffffffffffffffffffffff000000000000000000000000000000000000000060005493841693610c07853314610ea7565b161760005582519182526020820152a1005b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043560005260016020526020604060002054604051908152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576103e6610cb960209236906004016102b0565b610cc1610333565b90610ce573ffffffffffffffffffffffffffffffffffffffff600054163314610ea7565b60243590610f0c565b90600182811c92168015610d37575b6020831014610d0857565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610cfd565b9060405191826000825492610d5584610cee565b908184526001948581169081600014610dc45750600114610d81575b5050610d7f92500383610262565b565b9093915060005260209081600020936000915b818310610dac575050610d7f93508201013880610d71565b85548884018501529485019487945091830191610d94565b9450505050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009150166020830152610d7f82604081013880610d71565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043560005260066020526107216109d66040600020610d41565b503461000e57610e5f6105893661052b565b60005260026020526020604060002054604051908152f35b604051610ea160208281610e94818301968781519384920161092d565b8101038084520182610262565b51902090565b15610eae57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600460248201527f21676f76000000000000000000000000000000000000000000000000000000006044820152fd5b610f1890929192610e77565b908015610f3e575b610f2b575050600090565b6000526001602052604060002055600190565b5080600052600160205260406000205415610f20565b610f6090929192610e77565b908015610f86575b610f73575050600090565b6000526002602052604060002055600190565b5080600052600260205260406000205415610f68565b610fa890929192610e77565b90801561100b575b610fbb575050600090565b600052600360205273ffffffffffffffffffffffffffffffffffffffff604060002091167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055600190565b5080600052600360205273ffffffffffffffffffffffffffffffffffffffff6040600020541615610fb0565b90601f811161104557505050565b600091825260208220906020601f850160051c83019410611081575b601f0160051c01915b82811061107657505050565b81815560010161106a565b909250829061106156fea264697066735822122021661db5b9917890166c770c373059eba651fb0abb0226a2a522b956918ebbe864736f6c634300080d0033";
