/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockChainlink } from "../MockChainlink";

export class MockChainlink__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockChainlink> {
    return super.deploy(overrides || {}) as Promise<MockChainlink>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockChainlink {
    return super.attach(address) as MockChainlink;
  }
  connect(signer: Signer): MockChainlink__factory {
    return super.connect(signer) as MockChainlink__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockChainlink {
    return new Contract(address, _abi, signerOrProvider) as MockChainlink;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feed",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feed",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setMarketPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100165761015c908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630ab812311461009b57506341976e091461003757600080fd5b346100985760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009857604060209173ffffffffffffffffffffffffffffffffffffffff6100886100fe565b1681528083522054604051908152f35b80fd5b9050346100fa5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100fa5773ffffffffffffffffffffffffffffffffffffffff6100e96100fe565b168252816020526024356040832055f35b5080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361012157565b600080fdfea2646970667358221220c6a95135bcd2945758d0e563c9e57193a118a2505465a8e51cb90f4c6413c46564736f6c634300080d0033";
